pipeline {
    agent any
    stages {
        stage('Compile') {
            steps {
                script {
                    def mvnCmd = 'mvn clean package'
                    def mvnOutput = sh(script: mvnCmd, returnStdout: true).trim()
                    if (mvnOutput.contains('BUILD SUCCESS')) {
                        echo 'Maven build successful'
                    } else {
                        error 'Maven build failed'
                    }
                }
            }
        }
        stage('Deploy') {
          steps {
            withCredentials(bindings: [ string(credentialsId: 'K8S_CLUSTER_TOKEN_NAME', variable: 'api_token') ]) {
                sh 'kubectl apply -f devops/k8s/manifests/APP_NAME/ --server K8S_CLUSTER_URL --token $api_token --insecure-skip-tls-verify=true'
            }
          }
        }
    }
}